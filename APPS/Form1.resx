<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAgCAYAAABQISshAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA0NJREFUWEftmNdPU1Ecx/1HfEMFXDH6YtSYGBNjHE/GGOOIMXHvPWLiC8YHg52M
        MJVChNIyugcqoCGuB3YZD0KLlCV02UHC13tOT0sIBXppi63hk9zk3t+vbe6nv3N+95y7Bv8JqyLJxqpI
        spFSIgFPAN213exqLikhEvgTQMOz9xBmiiDZKEX7uw6WmSWpRUgFzE8bIM6U0EN3R4+a87XolHexT8yS
        lCJ+lx+mx+agQIYE9RdVcNgcNGe4b4i+IpM/J9nZyuJz+mB8aAoLqC6r4RxysmwQ3W1d9CKVx6rw9kAZ
        hr4NsUhi8U55uX/aGBZQX9XANexi2bnwEqk+pcT3gh8oP1qB4r0lsH2xsUx88U56ob9roDdPDs11Ldwj
        bpaNDC+RquNy2L5a6flIxwjKDspQtKcY1pZgLFbco25ob2ghSBdClCGG9qYOnjEPyy4Ob5GBTwPsKsho
        1yhkh8pRuLsI1mVWyGV3QX1NE6wAN4zIxPX8jk4gRMwiIcYsY5Ad5oS4Cg1GWSHnLydUV9RhAeMDI3wO
        H8vyI24iIcIV2lWEgc+DLDoX0jLrL6nCAqZHJtpaYyHuIiFIhcqPVKBgZ2H4O1PWKdRdqA8LmJ+Y4ffE
        JhAiYSIhSLepOiFH6f43yNueTyvVmNVElxfxJOEiLYIW2tnyduTTIVeyrxS2BDyHEibS/LIZks05dAiR
        ipB2TXBYHfQ6d1se+gz9NBYP4i7S9IIT2CSlAvKT1XTyR4JMeJLP2ZqLXl0fiy6fuIkEKyDlltRibgWg
        oJM9GkgLVnCfl27JQY+ml0X5E5PIzMwMV4GmcAWqSQUskSuwFOShqDxbQ/8Mi6qHRaOHt4i9bZieN2Y1
        zgrwqMBSkC5Xc66W/naXcv7+YiF4iShOK+mDjIxrIqA4o8R47zjLxheyxiLPHFG6GB3yThZdGF4iH55/
        RHbaazoEJvonWDSxkKU82X8IN4i5G21n0fnwEiHYW+3sbGUhmyuyHxGuF6Gtoo1FZ+Et8q/xu/10fyJY
        J0KrrJVFAT23b08pkRDkBYT2lg6CNCG66yzcVtiI9sr5cynpRUJMe6ehv2fAq7XZ6FSkyFuUxSBNYaJv
        fgNKOZHIAH8BconvJGGfHcMAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>